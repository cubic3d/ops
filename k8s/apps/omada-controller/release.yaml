apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: omada-controller
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: template
        namespace: flux-system
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: mbentley/omada-controller
              tag: 5.13@sha256:940ab98d678dfa9fcb0758340dec87775c32cde658e9391793883c7fb85fd1e3

              env:
                TZ: Europe/Berlin

    # podSecurityContext:
    #   sysctls:
    #     - name: net.ipv4.ip_unprivileged_port_start
    #       value: "0"

    service:
      # main:
      #   ports:
      #     http:
      #       port: 8043
      main:
        type: NodePort
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8043
            nodePort: 8043
            protocol: TCP
          app-discovery:
            port: 27001
            nodePort: 27001
            protocol: UDP
          discovery:
            port: 29810
            nodePort: 29810
            protocol: UDP
          manager-v1:
            port: 29811
            nodePort: 29811
            protocol: TCP
          adopt-v1:
            port: 29812
            nodePort: 29812
            protocol: TCP
          upgrade-v1:
            port: 29813
            nodePort: 29813
            protocol: TCP
          manager-v2:
            port: 29814
            nodePort: 29814
            protocol: TCP

    ingress:
      main:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: "${public_host}"
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/upstream-vhost: "omada.${domain}:8043"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
        hosts:
          - host: "omada.${domain}"
            paths:
              - path: /
                service:
                  name: main
                  port: http

    persistence:
      data:
        enabled: true
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: local-hostpath
        retain: true
        globalMounts:
          - path: /opt/tplink/EAPController/data
      logs:
        enabled: true
        size: 1Gi
        accessMode: ReadWriteOnce
        storageClass: local-hostpath
        retain: true
        globalMounts:
          - path: /opt/tplink/EAPController/logs
