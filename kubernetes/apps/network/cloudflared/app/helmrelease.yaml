# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app cloudflared
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: *app

  values:
    controllers:
      cloudflared:
        replicas: 2
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: docker.io/cloudflare/cloudflared
              tag: 2025.10.0
            args:
              - tunnel
              - run
            env:
              NO_AUTOUPDATE: "true"
              TUNNEL_METRICS: 0.0.0.0:8080
              TUNNEL_POST_QUANTUM: true
              TUNNEL_TRANSPORT_PROTOCOL: quic

            envFrom:
              - secretRef:
                  name: cloudflared

            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ready
                    port: &port 8080
              readiness: *probe
              startup: *probe

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 10m
                memory: 120Mi
              limits:
                memory: 120Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared

    service:
      app:
        ports:
          http:
            port: *port

    persistence:
      config:
        type: configMap
        identifier: config
        globalMounts:
          - path: /etc/cloudflared/config.yaml
            subPath: config.yaml
            readOnly: true

    configMaps:
      config:
        data:
          config.yaml: |-
            ingress:
              - hostname: "*.${domain}"
                originRequest:
                  http2Origin: true
                  originServerName: ingress-ext.${domain}
                service: https://ingress-nginx-external-controller.network.svc.cluster.local:443
              - service: http_status:404
