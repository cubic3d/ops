# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: *app

  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.3.10276

            env:
              TZ: Europe/Berlin
              COMPlus_EnableDiagnostics: "0"
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__SERVER__PORT: &port 7878
              RADARR__LOG__LEVEL: info
              RADARR__LOG__ANALYTICSENABLED: "False"
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr
                    key: api_key

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
              readiness: *probes
              startup: *probes

            resources:
              requests:
                cpu: 20m
                memory: 200Mi
              limits:
                memory: 2Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        ports:
          http:
            port: *port

    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/authz/auth-request
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${domain}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        hosts:
          - host: radarr.${domain}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: radarr

      cache:
        existingClaim: radarr-cache
        globalMounts:
          - path: /config/MediaCover

      tmp:
        type: emptyDir

      media:
        existingClaim: media
