# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.5.1@sha256:1c88830f3c51fc2f1230ad7040bcbe30f197449ae93f835448cf516d8b7e5e82

            env:
              TZ: Europe/Berlin
              # No support for those global settings yet in bazarr
              COMPlus_EnableDiagnostics: "0"
              BAZARR__APP__INSTANCENAME: Bazarr
              BAZARR__SERVER__PORT: &port 6767
              BAZARR__LOG__LEVEL: info
              BAZARR__LOG__ANALYTICSENABLED: "False"
              BAZARR__AUTH__METHOD: External
              BAZARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: bazarr
                    key: api_key

            probes:
              liveness: &probes
                enabled: true
              readiness: *probes
              startup: *probes

            resources:
              requests:
                cpu: 10m
                memory: 200Mi
              limits:
                memory: 500Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
              seccompProfile:
                type: RuntimeDefault

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/authz/auth-request
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${domain}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        hosts:
          - host: bazarr.${domain}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: bazarr

      tmp:
        type: emptyDir

      media:
        existingClaim: media
