# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: zigbee2mqtt
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      zigbee2mqtt:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 1.42.0

            envFrom:
              - secretRef:
                  name: zigbee2mqtt

            env:
              TZ: Europe/Berlin
              ZIGBEE2MQTT_DATA: /data
              ZIGBEE2MQTT_CONFIG_ADVANCED_CHANNEL: 25
              ZIGBEE2MQTT_CONFIG_ADVANCED_LAST_SEEN: ISO_8601
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_API: false
              ZIGBEE2MQTT_CONFIG_ADVANCED_LEGACY_AVAILABILITY_PAYLOAD: false
              ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_OUTPUT: '["console"]'
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_ACTIVE_TIMEOUT: 60
              ZIGBEE2MQTT_CONFIG_AVAILABILITY_PASSIVE_TIMEOUT: 2000
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_LEGACY: false
              ZIGBEE2MQTT_CONFIG_DEVICE_OPTIONS_RETAIN: true
              # Fixes TypeError: Cannot create property 'url' on boolean 'true'
              ZIGBEE2MQTT_CONFIG_FRONTEND: false
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://z2m.${domain}
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_DISCOVERY_TOPIC: homeassistant
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_EXPERIMENTAL_EVENT_ENTITIES: true
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_LEGACY_ENTITY_ATTRIBUTES: false
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_LEGACY_TRIGGERS: false
              ZIGBEE2MQTT_CONFIG_HOMEASSISTANT_STATUS_TOPIC: homeassistant/status
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://emqx-listeners.database.svc.cluster.local:1883
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 5
              ZIGBEE2MQTT_CONFIG_MQTT_USER: user
              ZIGBEE2MQTT_CONFIG_MQTT_INCLUDE_DEVICE_INFORMATION: true
              ZIGBEE2MQTT_CONFIG_PERMIT_JOIN: false
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: tcp://zigbee.h.${domain}:6638

            resources:
              requests:
                cpu: 50m
                memory: 380Mi
              limits:
                memory: 400Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
              seccompProfile:
                type: RuntimeDefault

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.longhorn.io/create-default-disk
                    operator: In
                    values:
                      - "true"
                      - config

    service:
      app:
        controller: zigbee2mqtt
        ports:
          http:
            port: 8080

    ingress:
      app:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://authelia.auth.svc.cluster.local/api/authz/auth-request
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${domain}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
        hosts:
          - host: z2m.${domain}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: zigbee2mqtt
