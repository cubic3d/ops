# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres
spec:
  postgresVersion: 17

  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: postgres

  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        pg_hba:
          - hostnossl all all 10.244.0.0/16 md5 # Needed because dbman does not support SSL yet
          - hostssl all all all md5

  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 2
      dataVolumeClaimSpec:
        storageClassName: openebs-hostpath
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: SUPERUSER
      password:
        type: AlphaNumeric
    # Applications

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres
      global: &backupGlobal
        compress-type: bz2
        # Hetzner
        repo1-block: "y"
        repo1-bundle: "y"
        repo1-path: /cpgo
        repo1-retention-full: "30" # days
        repo1-retention-full-type: time
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        # TODO: Decide on storage provider for backups
        - name: repo1
          s3: &hetzner
            endpoint: ${cpgo_s3_endpoint}
            bucket: cpgo
            region: eu-central
          schedules:
            full: "0 2 * * 0" # Sunday at 02:00
            differential: "0 2 * * 1-6" # Mon-Sat at 02:00

  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupGlobal
      repo:
        name: repo1
        s3: *hetzner

  # TODO: Add Podmonitor after deploying monitoring stack
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M

  proxy:
    pgBouncer:
      port: 5432
      replicas: *replica
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-pgbouncer
      config:
        global:
          pool_mode: transaction
          client_tls_sslmode: prefer
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: pgbouncer
