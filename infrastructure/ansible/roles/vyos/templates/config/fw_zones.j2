{# Zone rules #}
{% for zoneName, zone in settings.zones.items() %}
  {# Defaults #}
  set firewall zone {{ zoneName }} description {{ zone.name }}
  {% if zoneName == "local" %}
    set firewall zone {{ zoneName }} local-zone
  {% elif zone.vlan is defined %}
    set firewall zone {{ zoneName }} interface {{ zone.interface }}.{{ zone.vlan }}
  {% else %}
    set firewall zone {{ zoneName }} interface {{ zone.interface }}
  {% endif %}

  {# Rules #}
  {% if zone.policies is defined %}
    {% for policyName, ruleSets in zone.policies.items() %}
      {% for ruleSet in ruleSets %}

        {# Select zones for the rule set #}
        {% if ruleSet.only is defined %}
          {% set fromZones = ruleSet.only %}
        {% elif ruleSet.allExcept is defined %}
          {% set fromZones = settings.zones.keys() | reject("eq", zoneName) | reject("in", ruleSet.allExcept) %}
        {% else %}
          {% set fromZones = settings.zones.keys() | reject("eq", zoneName) %}
        {% endif %}

        {# Iterate over zone combinations #}
        {% for fromZone in fromZones %}

          {# Distinguish IPv4/6 rules #}
          {% if policyName == "from4" %}
            {% set path = "name "~fromZone~"-"~zoneName %}
          {% elif policyName == "from6" %}
            {% set path = "ipv6-name "~fromZone~"-"~zoneName~"-6" %}
          {% endif %}

          {# Assign rule set to zone combination #}
          set firewall zone {{ zoneName }} from {{ fromZone }} firewall {{ path }}

          {# Create rule set #}
          set firewall {{ path }} description 'From {{ settings.zones[fromZone].name }} to {{ zone.name }}'
          set firewall {{ path }} default-action {{ ruleSet.default }}
          set firewall {{ path }} enable-default-log

          {% if ruleSet.rules is defined %}
            {% for rule in ruleSet.rules %}
              {% set ruleNumber = loop.index %}
              {% set rulePath = path~" rule "~ruleNumber %}

              {# Create rules #}
              {% for ruleName, ruleArgs in rule.items() %}
                set firewall {{ path }} rule {{ ruleNumber }} description 'Rule: {{ ruleName }}'

                {# Delegate rule creation to a macro defining the rule #}
                {% if ruleArgs is mapping %}
                    {{ fwRules[ruleName](rulePath, **ruleArgs) }}
                {% else %}
                    {{ fwRules[ruleName](rulePath) }}
                {% endif %}
              {% endfor %}

            {% endfor %}
          {% endif %}
        {% endfor %}

      {% endfor %}
    {% endfor %}
  {% endif %}
{% endfor %}
